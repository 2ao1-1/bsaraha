name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/saraha:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/saraha:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          port: 22
          timeout: 30s
          command_timeout: 10m
          script: |
            echo "üöÄ Starting deployment..."

            # Pull the latest image
            echo "üì• Pulling latest Docker image..."
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/saraha:latest

            # Stop and remove existing container
            echo "üõë Stopping existing container..."
            docker stop saraha-ui || echo "Container not running"
            docker rm saraha-ui || echo "Container not found"

            # Run new container
            echo "‚ñ∂Ô∏è Starting new container..."
            docker run -d \
              --name saraha-ui \
              -p 3000:80 \
              --restart unless-stopped \
              ${{ secrets.DOCKER_HUB_USERNAME }}/saraha:latest

            # Verify deployment
            echo "‚úÖ Verifying deployment..."
            sleep 5
            if docker ps | grep saraha-ui; then
              echo "üéâ Deployment successful!"
            else
              echo "‚ùå Deployment failed!"
              exit 1
            fi

            # Clean up old images
            echo "üßπ Cleaning up old images..."
            docker image prune -f || true

            echo "‚ú® Deployment completed successfully!"
